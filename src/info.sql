CREATE TABLE Actors (
    stock_symbol CHAR(3),
    curr_price DECIMAL(10,2),
    a_name VARCHAR(50),
    a_birthdate VARCHAR(30),
    PRIMARY KEY (stock_symbol)
);

CREATE TABLE Customers (
    c_name VARCHAR(50),
    c_username VARCHAR(50),
    c_password VARCHAR(50),
    c_state CHAR(2),
    c_phone CHAR(10),
    c_email VARCHAR(50),
    c_taxid CHAR(9),
    PRIMARY KEY (c_username)
);

CREATE TABLE Daily_Bal (
    c_username VARCHAR(50), 
    bal DECIMAL(10,2),
    day DATE,
    PRIMARY KEY (c_username, day),    
    FOREIGN KEY (c_username) REFERENCES Customers(c_username)
);

CREATE TABLE Day (
    curr_day DATE,
    day_id INTEGER,
    PRIMARY KEY (day_id)
);

CREATE TABLE Latest_Transaction (
    c_username VARCHAR(50), 
    value DECIMAL(10,2), 
    trans_type VARCHAR(20) NOT NULL, 
    stock_shares DECIMAL(10,3),
    stock_symbol CHAR(3),
    stock_shares_id INTEGER,
    trans_id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    PRIMARY KEY (trans_id),    
    FOREIGN KEY (c_username) REFERENCES Customers(c_username),
    FOREIGN KEY (stock_symbol) REFERENCES Actors(stock_symbol)
);

CREATE TABLE Market_Accounts (
    c_username VARCHAR(50),
    market_acc_id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    market_acc_balance DECIMAL(10,2),
    shares_traded DECIMAL(10,3),
    dter INTEGER,
    initial_bal DECIMAL(10,2),
    interest_prev DECIMAL(10,2),
    PRIMARY KEY (market_acc_id),
    FOREIGN KEY (c_username) REFERENCES Customers(c_username),
    CHECK (market_acc_balance >= 0) 
);

CREATE TABLE Movie_Contracts (
    a_name VARCHAR(50),
    movie_title VARCHAR(50),
    movie_role VARCHAR(30),
    movie_year CHAR(4),
    contract_value DECIMAL(10,2),
    PRIMARY KEY (a_name, movie_title, movie_year),
    FOREIGN KEY (a_name) REFERENCES Actors(a_name),
    FOREIGN KEY (movie_title, movie_year) REFERENCES Movies(movie_title, movie_year)
);

CREATE TABLE Movie_Reviews (
    movie_title VARCHAR(50),
    movie_year CHAR(4),
    movie_id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    movie_review VARCHAR(255),
    PRIMARY KEY (movie_id),
    FOREIGN KEY (movie_title, movie_year) REFERENCES Movies(movie_title, movie_year)
);

CREATE TABLE Movies (
    movie_title VARCHAR(50),
    movie_year CHAR(4),
    movie_rating DECIMAL(3, 1),
    PRIMARY KEY (movie_title, movie_year)
);

CREATE TABLE Stock_Accounts (
    c_username VARCHAR(50),
    stock_acc_id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    stock_shares DECIMAL(10,3),
    stock_symbol CHAR(3),
    PRIMARY KEY (c_username, stock_symbol),
    FOREIGN KEY (c_username) REFERENCES Customers(c_username),
    FOREIGN KEY (stock_symbol) REFERENCES Actors(stock_symbol),
    CHECK (stock_shares >= 0)
);

CREATE TABLE Stock_Shares_Accounts (
    c_username VARCHAR(50),
    stock_shares_id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    stock_shares DECIMAL(10,3),
    stock_symbol CHAR(3),
    curr_price DECIMAL(9,2),
    PRIMARY KEY (stock_shares_id),
    FOREIGN KEY (c_username) REFERENCES Customers(c_username),
    FOREIGN KEY (stock_symbol) REFERENCES Actors(stock_symbol),
    CHECK (stock_shares >= 0)
);

CREATE TABLE Stocks (
    stock_symbol CHAR(3),
    close_price DECIMAL(10,2),
    day DATE,
    PRIMARY KEY (stock_symbol, day),
    FOREIGN KEY (stock_symbol) REFERENCES Actors(stock_symbol)
);

CREATE TABLE Transactions (
    c_username VARCHAR(50),
    value DECIMAL(10,2),
    trans_id INTEGER GENERATED BY DEFAULT AS IDENTITY,
    trans_type VARCHAR(20) NOT NULL,
    trans_date DATE,
    stock_symbol CHAR(3),
    stock_shares DECIMAL(10,3),
    curr_price DECIMAL(8,2),
    PRIMARY KEY (trans_id),
    FOREIGN KEY (c_username) REFERENCES Customers(c_username),
    FOREIGN KEY (stock_symbol) REFERENCES Actors(stock_symbol)
);

